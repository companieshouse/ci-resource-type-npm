#!/bin/sh

set -e
set -o pipefail

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source $(dirname "$0")/common.sh

# Read inputs
payload=$(mktemp $TMPDIR/request-payload.XXXXXX)
cat > $payload <&0

package=$(jq -r '.source.package // ""' < $payload)

if [ -z "$package" ]; then
  echo "invalid payload (missing package)"
  exit 1
fi

package_path=$(jq -r '.params.path // ""' < $payload)

if [ -z "$package_path" ]; then
  echo "invalid payload (missing path)"
  exit 1
fi

# Prepare
setup_resource $payload
echo "Resource setup successful."

publish_result_file=$(mktemp $TMPDIR/publish-result.XXXXXX)

cd "$package_path"
npm publish > $publish_result_file 2>&1

publish_result_code=$?
if [ $publish_result_code -ne 0 ]; then
  cat $publish_result_file >&3
  exit 1
fi

version_string=$(sed -es'|^+ @'$scope'/'$package'@||')
echo "{\"version\":{\"version\":\"$version_string\"}" \
| jq . \
>&3
