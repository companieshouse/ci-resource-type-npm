#!/bin/bash

set -e
set -o pipefail

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

source $(dirname "$0")/common.sh

# Read inputs
payload=$(mktemp request-payload.XXXXXX)
cat > $payload <&0

package=$(jq -r '.source.package // ""' < $payload)

if [ -z "$package" ]; then
  echo "invalid payload (missing package)"
  exit 1
fi

version_string=$(jq -r '.version.version // ""' < $payload)

if [ -z "$version_string" ]; then
  echo "invalid payload (missing version)"
  exit 1
fi

# Prepare
setup_resource $payload
echo "Resource setup successful."

[ -n "$scope" ] \
&& fqpn="@$scope/$package" \
|| fqpn="$package"

echo "Loading package $fpqn version $version_string"
yarn add \
    $yarn_args \
    --link-folder $1/link-folder \
    --global-folder $1/global-folder \
    --modules-folder $1/node_modules \
    --cache-folder $1/cache-folder \
    "$fqpn@$version_string"

echo "{\"version\":{\"version\":\"$version_string\"}}" \
| jq . \
>&3
